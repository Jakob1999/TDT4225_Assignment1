/**
 */
package Courses.impl;

import Courses.Course;
import Courses.CoursesPackage;
import Courses.Exams;
import Courses.Links;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Course</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link Courses.impl.CourseImpl#getCourseName <em>Course Name</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getCourseCode <em>Course Code</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getStudyPoints <em>Study Points</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getLevel <em>Level</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getSemester <em>Semester</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getLanguage <em>Language</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getExamId <em>Exam Id</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getCourseContent <em>Course Content</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getLearningOutcome <em>Learning Outcome</em>}</li>
 *   <li>{@link Courses.impl.CourseImpl#getLinkId <em>Link Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CourseImpl extends MinimalEObjectImpl.Container implements Course {
	/**
	 * The default value of the '{@link #getCourseName() <em>Course Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseName()
	 * @generated
	 * @ordered
	 */
	protected static final String COURSE_NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCourseName() <em>Course Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseName()
	 * @generated
	 * @ordered
	 */
	protected String courseName = COURSE_NAME_EDEFAULT;

	/**
	 * The default value of the '{@link #getCourseCode() <em>Course Code</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseCode()
	 * @generated
	 * @ordered
	 */
	protected static final String COURSE_CODE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCourseCode() <em>Course Code</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseCode()
	 * @generated
	 * @ordered
	 */
	protected String courseCode = COURSE_CODE_EDEFAULT;

	/**
	 * The default value of the '{@link #getStudyPoints() <em>Study Points</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStudyPoints()
	 * @generated
	 * @ordered
	 */
	protected static final float STUDY_POINTS_EDEFAULT = 0.0F;

	/**
	 * The cached value of the '{@link #getStudyPoints() <em>Study Points</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStudyPoints()
	 * @generated
	 * @ordered
	 */
	protected float studyPoints = STUDY_POINTS_EDEFAULT;

	/**
	 * The default value of the '{@link #getLevel() <em>Level</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLevel()
	 * @generated
	 * @ordered
	 */
	protected static final String LEVEL_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getLevel() <em>Level</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLevel()
	 * @generated
	 * @ordered
	 */
	protected String level = LEVEL_EDEFAULT;

	/**
	 * The default value of the '{@link #getSemester() <em>Semester</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSemester()
	 * @generated
	 * @ordered
	 */
	protected static final String SEMESTER_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getSemester() <em>Semester</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getSemester()
	 * @generated
	 * @ordered
	 */
	protected String semester = SEMESTER_EDEFAULT;

	/**
	 * The default value of the '{@link #getLanguage() <em>Language</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLanguage()
	 * @generated
	 * @ordered
	 */
	protected static final String LANGUAGE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getLanguage() <em>Language</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLanguage()
	 * @generated
	 * @ordered
	 */
	protected String language = LANGUAGE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getExamId() <em>Exam Id</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getExamId()
	 * @generated
	 * @ordered
	 */
	protected EList<Exams> examId;

	/**
	 * The default value of the '{@link #getCourseContent() <em>Course Content</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseContent()
	 * @generated
	 * @ordered
	 */
	protected static final String COURSE_CONTENT_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getCourseContent() <em>Course Content</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCourseContent()
	 * @generated
	 * @ordered
	 */
	protected String courseContent = COURSE_CONTENT_EDEFAULT;

	/**
	 * The default value of the '{@link #getLearningOutcome() <em>Learning Outcome</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLearningOutcome()
	 * @generated
	 * @ordered
	 */
	protected static final String LEARNING_OUTCOME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getLearningOutcome() <em>Learning Outcome</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLearningOutcome()
	 * @generated
	 * @ordered
	 */
	protected String learningOutcome = LEARNING_OUTCOME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getLinkId() <em>Link Id</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLinkId()
	 * @generated
	 * @ordered
	 */
	protected Links linkId;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CourseImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return CoursesPackage.Literals.COURSE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCourseName() {
		return courseName;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCourseName(String newCourseName) {
		String oldCourseName = courseName;
		courseName = newCourseName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__COURSE_NAME, oldCourseName, courseName));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCourseCode() {
		return courseCode;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCourseCode(String newCourseCode) {
		String oldCourseCode = courseCode;
		courseCode = newCourseCode;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__COURSE_CODE, oldCourseCode, courseCode));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public float getStudyPoints() {
		return studyPoints;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setStudyPoints(float newStudyPoints) {
		float oldStudyPoints = studyPoints;
		studyPoints = newStudyPoints;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__STUDY_POINTS, oldStudyPoints, studyPoints));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getLevel() {
		return level;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setLevel(String newLevel) {
		String oldLevel = level;
		level = newLevel;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__LEVEL, oldLevel, level));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getSemester() {
		return semester;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	/* -----CONSTRAINT-----
	 * 
	 * If the language of the course is in english, the registered semester can only be Autumn or Spring.
	 * 
	 * However, if the registerd language is Norwegian, it can only be Høst or Vår.
	 * 
	 */
	public void setSemester(String newSemester) {
		String oldSemester = SEMESTER_EDEFAULT;
		if (newSemester.equals("Autumn") || newSemester.equals("Spring")) {
			oldSemester = semester;
		}
		else {
			System.out.println("Invalid semester");
		}
		
		semester = newSemester;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__SEMESTER, oldSemester, semester));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getLanguage() {
		return language;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setLanguage(String newLanguage) {
		String oldLanguage = language;
		language = newLanguage;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__LANGUAGE, oldLanguage, language));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Exams> getExamId() {
		if (examId == null) {
			examId = new EObjectContainmentEList<Exams>(Exams.class, this, CoursesPackage.COURSE__EXAM_ID);
		}
		return examId;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getCourseContent() {
		return courseContent;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setCourseContent(String newCourseContent) {
		String oldCourseContent = courseContent;
		courseContent = newCourseContent;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__COURSE_CONTENT, oldCourseContent, courseContent));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getLearningOutcome() {
		return learningOutcome;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setLearningOutcome(String newLearningOutcome) {
		String oldLearningOutcome = learningOutcome;
		learningOutcome = newLearningOutcome;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__LEARNING_OUTCOME, oldLearningOutcome, learningOutcome));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Links getLinkId() {
		return linkId;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetLinkId(Links newLinkId, NotificationChain msgs) {
		Links oldLinkId = linkId;
		linkId = newLinkId;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__LINK_ID, oldLinkId, newLinkId);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setLinkId(Links newLinkId) {
		if (newLinkId != linkId) {
			NotificationChain msgs = null;
			if (linkId != null)
				msgs = ((InternalEObject)linkId).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CoursesPackage.COURSE__LINK_ID, null, msgs);
			if (newLinkId != null)
				msgs = ((InternalEObject)newLinkId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CoursesPackage.COURSE__LINK_ID, null, msgs);
			msgs = basicSetLinkId(newLinkId, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CoursesPackage.COURSE__LINK_ID, newLinkId, newLinkId));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case CoursesPackage.COURSE__EXAM_ID:
				return ((InternalEList<?>)getExamId()).basicRemove(otherEnd, msgs);
			case CoursesPackage.COURSE__LINK_ID:
				return basicSetLinkId(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case CoursesPackage.COURSE__COURSE_NAME:
				return getCourseName();
			case CoursesPackage.COURSE__COURSE_CODE:
				return getCourseCode();
			case CoursesPackage.COURSE__STUDY_POINTS:
				return getStudyPoints();
			case CoursesPackage.COURSE__LEVEL:
				return getLevel();
			case CoursesPackage.COURSE__SEMESTER:
				return getSemester();
			case CoursesPackage.COURSE__LANGUAGE:
				return getLanguage();
			case CoursesPackage.COURSE__EXAM_ID:
				return getExamId();
			case CoursesPackage.COURSE__COURSE_CONTENT:
				return getCourseContent();
			case CoursesPackage.COURSE__LEARNING_OUTCOME:
				return getLearningOutcome();
			case CoursesPackage.COURSE__LINK_ID:
				return getLinkId();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case CoursesPackage.COURSE__COURSE_NAME:
				setCourseName((String)newValue);
				return;
			case CoursesPackage.COURSE__COURSE_CODE:
				setCourseCode((String)newValue);
				return;
			case CoursesPackage.COURSE__STUDY_POINTS:
				setStudyPoints((Float)newValue);
				return;
			case CoursesPackage.COURSE__LEVEL:
				setLevel((String)newValue);
				return;
			case CoursesPackage.COURSE__SEMESTER:
				setSemester((String)newValue);
				return;
			case CoursesPackage.COURSE__LANGUAGE:
				setLanguage((String)newValue);
				return;
			case CoursesPackage.COURSE__EXAM_ID:
				getExamId().clear();
				getExamId().addAll((Collection<? extends Exams>)newValue);
				return;
			case CoursesPackage.COURSE__COURSE_CONTENT:
				setCourseContent((String)newValue);
				return;
			case CoursesPackage.COURSE__LEARNING_OUTCOME:
				setLearningOutcome((String)newValue);
				return;
			case CoursesPackage.COURSE__LINK_ID:
				setLinkId((Links)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case CoursesPackage.COURSE__COURSE_NAME:
				setCourseName(COURSE_NAME_EDEFAULT);
				return;
			case CoursesPackage.COURSE__COURSE_CODE:
				setCourseCode(COURSE_CODE_EDEFAULT);
				return;
			case CoursesPackage.COURSE__STUDY_POINTS:
				setStudyPoints(STUDY_POINTS_EDEFAULT);
				return;
			case CoursesPackage.COURSE__LEVEL:
				setLevel(LEVEL_EDEFAULT);
				return;
			case CoursesPackage.COURSE__SEMESTER:
				setSemester(SEMESTER_EDEFAULT);
				return;
			case CoursesPackage.COURSE__LANGUAGE:
				setLanguage(LANGUAGE_EDEFAULT);
				return;
			case CoursesPackage.COURSE__EXAM_ID:
				getExamId().clear();
				return;
			case CoursesPackage.COURSE__COURSE_CONTENT:
				setCourseContent(COURSE_CONTENT_EDEFAULT);
				return;
			case CoursesPackage.COURSE__LEARNING_OUTCOME:
				setLearningOutcome(LEARNING_OUTCOME_EDEFAULT);
				return;
			case CoursesPackage.COURSE__LINK_ID:
				setLinkId((Links)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case CoursesPackage.COURSE__COURSE_NAME:
				return COURSE_NAME_EDEFAULT == null ? courseName != null : !COURSE_NAME_EDEFAULT.equals(courseName);
			case CoursesPackage.COURSE__COURSE_CODE:
				return COURSE_CODE_EDEFAULT == null ? courseCode != null : !COURSE_CODE_EDEFAULT.equals(courseCode);
			case CoursesPackage.COURSE__STUDY_POINTS:
				return studyPoints != STUDY_POINTS_EDEFAULT;
			case CoursesPackage.COURSE__LEVEL:
				return LEVEL_EDEFAULT == null ? level != null : !LEVEL_EDEFAULT.equals(level);
			case CoursesPackage.COURSE__SEMESTER:
				return SEMESTER_EDEFAULT == null ? semester != null : !SEMESTER_EDEFAULT.equals(semester);
			case CoursesPackage.COURSE__LANGUAGE:
				return LANGUAGE_EDEFAULT == null ? language != null : !LANGUAGE_EDEFAULT.equals(language);
			case CoursesPackage.COURSE__EXAM_ID:
				return examId != null && !examId.isEmpty();
			case CoursesPackage.COURSE__COURSE_CONTENT:
				return COURSE_CONTENT_EDEFAULT == null ? courseContent != null : !COURSE_CONTENT_EDEFAULT.equals(courseContent);
			case CoursesPackage.COURSE__LEARNING_OUTCOME:
				return LEARNING_OUTCOME_EDEFAULT == null ? learningOutcome != null : !LEARNING_OUTCOME_EDEFAULT.equals(learningOutcome);
			case CoursesPackage.COURSE__LINK_ID:
				return linkId != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (CourseName: ");
		result.append(courseName);
		result.append(", CourseCode: ");
		result.append(courseCode);
		result.append(", StudyPoints: ");
		result.append(studyPoints);
		result.append(", Level: ");
		result.append(level);
		result.append(", Semester: ");
		result.append(semester);
		result.append(", Language: ");
		result.append(language);
		result.append(", CourseContent: ");
		result.append(courseContent);
		result.append(", LearningOutcome: ");
		result.append(learningOutcome);
		result.append(')');
		return result.toString();
	}

} //CourseImpl
